// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramBots.MessageSender.Data;

#nullable disable

namespace TelegramBots.MessageSender.Migrations.InstagramCache
{
    [DbContext(typeof(InstagramCacheDbContext))]
    partial class InstagramCacheDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelegramBots.MessageSender.DTOs.AudioCache", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<long>("FileCacheInfoId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<float>("Quality")
                        .HasColumnType("real");

                    b.Property<string>("ThumbnailPath")
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.HasKey("Id");

                    b.HasIndex("FileCacheInfoId");

                    b.ToTable("AudioCaches");
                });

            modelBuilder.Entity("TelegramBots.MessageSender.DTOs.FileCacheInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserSentLink")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("UserSentLinkKey")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.HasKey("Id");

                    b.ToTable("FileCacheInfos");
                });

            modelBuilder.Entity("TelegramBots.MessageSender.DTOs.VideoCache", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<long>("FileCacheInfoId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailPath")
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileCacheInfoId");

                    b.ToTable("VideoCaches");
                });

            modelBuilder.Entity("TelegramBots.MessageSender.DTOs.AudioCache", b =>
                {
                    b.HasOne("TelegramBots.MessageSender.DTOs.FileCacheInfo", "FileCacheInfo")
                        .WithMany("Audios")
                        .HasForeignKey("FileCacheInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileCacheInfo");
                });

            modelBuilder.Entity("TelegramBots.MessageSender.DTOs.VideoCache", b =>
                {
                    b.HasOne("TelegramBots.MessageSender.DTOs.FileCacheInfo", "FileCacheInfo")
                        .WithMany("Videos")
                        .HasForeignKey("FileCacheInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileCacheInfo");
                });

            modelBuilder.Entity("TelegramBots.MessageSender.DTOs.FileCacheInfo", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
